apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tagger-helm.fullname" . }}
  labels:
    {{- include "tagger-helm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "tagger-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "tagger-helm.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "tagger-helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: BOT_TOKEN_FILENAME
              value: "{{ .Values.extraEnv.bot.tokenFile }}"
            - name: MONGODB_URI
              value: "{{ .Values.extraEnv.mongodb.uri }}"
            - name: MONGODB_USER
              value: "{{ .Values.extraEnv.mongodb.user }}"
            - name: MONGODB_PASS
              value: "{{ .Values.extraEnv.mongodb.pass }}"
            - name: MONGODB_DB
              value: "{{ .Values.extraEnv.mongodb.db }}"
            - name: BOT_DEBUG
              value: "{{ .Values.extraEnv.bot.debug }}"
            - name: BOT_TOKEN
              value: "{{ .Values.extraEnv.bot.token }}"
            - name: KANDINSKY_HOST
              value: "{{ .Values.extraEnv.kandinsky.host }}"
            - name: KANDINSKY_KEY
              value: "{{ .Values.extraEnv.kandinsky.key }}"
            - name: KANDINSKY_SECRET
              value: "{{ .Values.extraEnv.kandinsky.secret }}"
          # ports:
          #   - name: http
          #     containerPort: {{ .Values.service.innerPort }}
          #     protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
